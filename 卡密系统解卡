-- =============================================
-- 罗布乐思卡密验证系统 - 带自动发言
-- 作者: AI助手
-- 版本: v1.0
-- =============================================

local CardAuthSystem = {}
CardAuthSystem.__index = CardAuthSystem

function CardAuthSystem:new()
    local system = setmetatable({}, CardAuthSystem)
    system:initialize()
    return system
end

function CardAuthSystem:initialize()
    self.isVerified = false
    self.attempts = 0
    self.maxAttempts = 3
    self.lockTime = 0
    
    -- 卡密数据库
    self.cardDatabase = {
        ["NINJA-2024-VIP"] = { type = "VIP", days = 30, used = false },
        ["ROBLOX-PRO-ACCESS"] = { type = "PRO", days = 7, used = false },
        ["MASTER-CODE-999"] = { type = "MASTER", days = 90, used = false },
        ["LM-nbnbklr/www.？"] = { type = "搞鸡卡密", days = 1, used = false }
    }
    
    -- 您的官方链接
    self.officialLink = "https://link-target.net/1406753/FDJ7SKf8rNUB"
    
    -- 自动发言内容
    self.autoMessages = {       
        "刘某脚本牛👃😡😡",
    }
end

-- 创建紧凑验证界面
function CardAuthSystem:createCompactUI()
    -- 主GUI
    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.Name = "CardAuthSystem"
    self.screenGui.Parent = game:GetService("CoreGui")
    
    -- 背景遮罩
    self.background = Instance.new("Frame")
    self.background.Size = UDim2.new(1, 0, 1, 0)
    self.background.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    self.background.BackgroundTransparency = 0.2
    self.background.BorderSizePixel = 0
    self.background.Parent = self.screenGui
    
    -- 主框架 - 更小尺寸
    self.mainFrame = Instance.new("Frame")
    self.mainFrame.Size = UDim2.new(0, 350, 0, 320)
    self.mainFrame.Position = UDim2.new(0.5, -175, 0.5, -160)
    self.mainFrame.BackgroundColor3 = Color3.fromRGB(25, 30, 45)
    self.mainFrame.BorderSizePixel = 0
    self.mainFrame.Parent = self.screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = self.mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(0, 150, 255)
    stroke.Thickness = 2
    stroke.Parent = self.mainFrame
    
    -- 标题栏
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 40, 60)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = self.mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleBar
    
    -- 标题文字
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "刘某授权验证"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = titleBar
    
    -- 说明文字
    local descLabel = Instance.new("TextLabel")
    descLabel.Size = UDim2.new(1, -20, 0, 40)
    descLabel.Position = UDim2.new(0, 10, 0, 50)
    descLabel.BackgroundTransparency = 1
    descLabel.Text = "输入卡密激活刘某脚本"
    descLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
    descLabel.TextSize = 12
    descLabel.TextWrapped = true
    descLabel.Font = Enum.Font.Gotham
    descLabel.Parent = self.mainFrame
    
    -- 卡密输入框
    self.cardInput = Instance.new("TextBox")
    self.cardInput.Size = UDim2.new(1, -20, 0, 40)
    self.cardInput.Position = UDim2.new(0, 10, 0, 100)
    self.cardInput.PlaceholderText = "输入卡密..."
    self.cardInput.Text = ""
    self.cardInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.cardInput.BackgroundColor3 = Color3.fromRGB(40, 45, 65)
    self.cardInput.TextSize = 14
    self.cardInput.Font = Enum.Font.Gotham
    self.cardInput.Parent = self.mainFrame
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 6)
    inputCorner.Parent = self.cardInput
    
    -- 验证按钮
    self.verifyButton = Instance.new("TextButton")
    self.verifyButton.Size = UDim2.new(1, -20, 0, 35)
    self.verifyButton.Position = UDim2.new(0, 10, 0, 150)
    self.verifyButton.Text = "✅ 验证卡密"
    self.verifyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.verifyButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
    self.verifyButton.TextSize = 14
    self.verifyButton.Font = Enum.Font.GothamBold
    self.verifyButton.Parent = self.mainFrame
    
    local verifyCorner = Instance.new("UICorner")
    verifyCorner.CornerRadius = UDim.new(0, 6)
    verifyCorner.Parent = self.verifyButton
    
    -- 自动发言按钮
    self.autoChatButton = Instance.new("TextButton")
    self.autoChatButton.Size = UDim2.new(0, 150, 0, 30)
    self.autoChatButton.Position = UDim2.new(0, 10, 0, 195)
    self.autoChatButton.Text = "跳转浏览器"
    self.autoChatButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.autoChatButton.BackgroundColor3 = Color3.fromRGB(120, 80, 160)
    self.autoChatButton.TextSize = 12
    self.autoChatButton.Font = Enum.Font.GothamBold
    self.autoChatButton.Parent = self.mainFrame
    
    local autoChatCorner = Instance.new("UICorner")
    autoChatCorner.CornerRadius = UDim.new(0, 6)
    autoChatCorner.Parent = self.autoChatButton
    
    -- 复制链接按钮
    self.copyLinkButton = Instance.new("TextButton")
    self.copyLinkButton.Size = UDim2.new(0, 150, 0, 30)
    self.copyLinkButton.Position = UDim2.new(1, -160, 0, 195)
    self.copyLinkButton.Text = "📎 复制链接"
    self.copyLinkButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.copyLinkButton.BackgroundColor3 = Color3.fromRGB(45, 80, 120)
    self.copyLinkButton.TextSize = 12
    self.copyLinkButton.Font = Enum.Font.GothamBold
    self.copyLinkButton.Parent = self.mainFrame
    
    local copyLinkCorner = Instance.new("UICorner")
    copyLinkCorner.CornerRadius = UDim.new(0, 6)
    copyLinkCorner.Parent = self.copyLinkButton
    
    -- 状态显示
    self.statusLabel = Instance.new("TextLabel")
    self.statusLabel.Size = UDim2.new(1, -20, 0, 50)
    self.statusLabel.Position = UDim2.new(0, 10, 0, 235)
    self.statusLabel.BackgroundColor3 = Color3.fromRGB(35, 40, 55)
    self.statusLabel.Text = "等待验证..."
    self.statusLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
    self.statusLabel.TextSize = 12
    self.statusLabel.TextWrapped = true
    self.statusLabel.Font = Enum.Font.Gotham
    self.statusLabel.Parent = self.mainFrame
    
    local statusCorner = Instance.new("UICorner")
    statusCorner.CornerRadius = UDim.new(0, 6)
    statusCorner.Parent = self.statusLabel
    
    -- 绑定事件
    self:setupEvents()
end

-- 设置事件处理
function CardAuthSystem:setupEvents()
    -- 验证按钮点击
    self.verifyButton.MouseButton1Click:Connect(function()
        self:verifyCard()
    end)
    
    -- 自动发言按钮点击
    self.autoChatButton.MouseButton1Click:Connect(function()
        self:autoChatInGame()
    end)
    
    -- 复制链接按钮点击
    self.copyLinkButton.MouseButton1Click:Connect(function()
        self:copyOfficialLink()
    end)
    
    -- 回车键验证
    self.cardInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            self:verifyCard()
        end
    end)
end

-- 验证卡密
function CardAuthSystem:verifyCard()
    local cardKey = self.cardInput.Text:gsub("^%s*(.-)%s*$", "%1")
    
    if cardKey == "" then
        self:updateStatus("请输入卡密号码", Color3.fromRGB(255, 100, 100))
        return
    end
    
    -- 检查系统锁定
    if self.lockTime > os.time() then
        local remaining = self.lockTime - os.time()
        self:updateStatus("系统锁定中，" .. remaining .. "秒后重试", Color3.fromRGB(255, 100, 100))
        return
    end
    
    -- 验证卡密
    local card = self.cardDatabase[cardKey]
    
    if card then
        if card.used then
            self:updateStatus("卡密已被使用", Color3.fromRGB(255, 100, 100))
            self.attempts = self.attempts + 1
        else
            -- 验证成功
            card.used = true
            self.isVerified = true
            self:updateStatus("✅ 验证成功！\n类型: " .. card.type .. "\n时长: " .. card.days .. "天", Color3.fromRGB(100, 255, 100))
            
            -- 禁用输入
            self.cardInput.Text = "已验证成功"
            self.cardInput.TextColor3 = Color3.fromRGB(100, 255, 100)
            self.verifyButton.Text = "✅ 已验证"
            self.verifyButton.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
            self.verifyButton.Active = false
            
            -- 2秒后执行主脚本
            wait(2)
            self:executeMainScript()
        end
    else
        self.attempts = self.attempts + 1
        local remainingAttempts = self.maxAttempts - self.attempts
        
        if remainingAttempts > 0 then
            self:updateStatus("卡密无效！剩余次数: " .. remainingAttempts, Color3.fromRGB(255, 100, 100))
        else
            self.lockTime = os.time() + 300
            self:updateStatus("错误次数过多！锁定5分钟", Color3.fromRGB(255, 100, 100))
        end
    end
end

-- 自动在游戏中发言
function CardAuthSystem:autoChatInGame()
    self:updateStatus("正在发送消息...", Color3.fromRGB(255, 200, 100))
    self.autoChatButton.Text = "跳转中..."
    
    -- 随机选择一条消息
    local randomIndex = math.random(1, #self.autoMessages)
    local message = self.autoMessages[randomIndex]
    
    -- 尝试发送消息
    local success = self:sendChatMessage(message)
    
    if success then
        self:updateStatus("✅ 跳转成功成功！\n" .. message, Color3.fromRGB(100, 255, 100))
        
        -- 显示通知
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "跳转浏览器",
            Text = "跳转中",
            Duration = 3
        })
    else
        self:updateStatus("❌ 跳转失败\n请检查聊天权限", Color3.fromRGB(255, 100, 100))
    end
    
    wait(1.5)
    self.autoChatButton.Text = "跳转浏览器"
end

-- 发送聊天消息
function CardAuthSystem:sendChatMessage(message)
    local success = false
    
    -- 方法1: 使用TextChatService (新版)
    local textChatSuccess, textChatResult = pcall(function()
        local TextChatService = game:GetService("TextChatService")
        if TextChatService and TextChatService.TextChannels then
            local generalChannel = TextChatService.TextChannels:FindFirstChild("RBXGeneral")
            if generalChannel then
                generalChannel:SendAsync(message)
                success = true
            end
        end
    end)
    
    -- 方法2: 使用默认聊天系统
    if not success then
        local defaultChatSuccess, defaultChatResult = pcall(function()
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
            success = true
        end)
    end
    
    -- 方法3: 使用聊天服务
    if not success then
        local chatServiceSuccess, chatServiceResult = pcall(function()
            local Players = game:GetService("Players")
            local localPlayer = Players.LocalPlayer
            if localPlayer and localPlayer.Character then
                local head = localPlayer.Character:FindFirstChild("Head")
                if head then
                    local ChatService = game:GetService("Chat")
                    ChatService:Chat(head, message)
                    success = true
                end
            end
        end)
    end
    
    return success
end

-- 复制官方链接到剪切板
function CardAuthSystem:copyOfficialLink()
    self:updateStatus("正在复制链接...", Color3.fromRGB(255, 200, 100))
    self.copyLinkButton.Text = "📋 复制中..."
    
    -- 尝试复制到剪切板
    local success = pcall(function()
        if setclipboard then
            setclipboard(self.officialLink)
            self:updateStatus("✅ 链接已复制！\n" .. self.officialLink, Color3.fromRGB(100, 255, 100))
        else
            self.cardInput.Text = self.officialLink
            self:updateStatus("🔗 链接已填入输入框\n请手动复制", Color3.fromRGB(255, 200, 100))
        end
    end)
    
    if not success then
        self.cardInput.Text = self.officialLink
        self:updateStatus("🔗 链接已填入输入框\n请手动复制", Color3.fromRGB(255, 200, 100))
    end
    
    wait(1.5)
    self.copyLinkButton.Text = "📎 复制链接"
end

-- 更新状态显示
function CardAuthSystem:updateStatus(message, color)
    self.statusLabel.Text = message
    self.statusLabel.TextColor3 = color
end

-- 执行主脚本
function CardAuthSystem:executeMainScript()
    -- 隐藏验证界面
    self.screenGui:Destroy()
    
    -- 显示成功消息
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "🎉 验证成功",
        Text = "正在加载脚本...",
        Duration = 3
    })
    
    -- 执行您的主脚本
    self:runMainScript()
end

-- 主脚本执行函数
function CardAuthSystem:runMainScript()
    print("🎯 卡密验证通过！")
    print("🚀 正在加载主脚本...")
    
    -- 执行您的主脚本
    loadstring(game:HttpGet("https://raw.githubusercontent.com/liuliuqiang404-code/-/refs/heads/main/%E5%85%AC%E5%91%8A"))()
    
    print("✅ 主脚本加载完成！")
end

-- 启动系统
function CardAuthSystem:start()
    self:createCompactUI()
    
    -- 显示欢迎信息
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "刘某授权验证",
        Text = "请输入卡密激活脚本",
        Duration = 3
    })
end

-- =============================================
-- 系统启动
-- =============================================

-- 创建并启动系统
local authSystem = CardAuthSystem:new()
authSystem:start()

-- 防止重复执行
if _G.CARD_AUTH_LOADED then
    return
end
_G.CARD_AUTH_LOADED = true

return CardAuthSystem