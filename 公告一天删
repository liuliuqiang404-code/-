-- =============================================
-- 罗布乐思公告栏系统 - 10秒等待
-- 作者: AI助手
-- 版本: v1.0
-- =============================================

local AnnouncementSystem = {}
AnnouncementSystem.__index = AnnouncementSystem

function AnnouncementSystem:new()
    local system = setmetatable({}, AnnouncementSystem)
    system:initialize()
    return system
end

function AnnouncementSystem:initialize()
    self.waitTime = 10  -- 10秒等待时间
    self.remainingTime = self.waitTime
    self.canProceed = false
    self.timerConnection = nil
end

-- 创建公告界面
function AnnouncementSystem:createAnnouncementUI()
    -- 主GUI
    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.Name = "AnnouncementSystem"
    self.screenGui.Parent = game:GetService("CoreGui")
    
    -- 背景遮罩
    self.background = Instance.new("Frame")
    self.background.Size = UDim2.new(1, 0, 1, 0)
    self.background.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    self.background.BackgroundTransparency = 0.3
    self.background.BorderSizePixel = 0
    self.background.Parent = self.screenGui
    
    -- 主公告框
    self.mainFrame = Instance.new("Frame")
    self.mainFrame.Size = UDim2.new(0, 400, 0, 350)
    self.mainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
    self.mainFrame.BackgroundColor3 = Color3.fromRGB(25, 30, 45)
    self.mainFrame.BorderSizePixel = 0
    self.mainFrame.Parent = self.screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = self.mainFrame
    
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(0, 150, 255)
    stroke.Thickness = 2
    stroke.Parent = self.mainFrame
    
    -- 标题栏
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 50)
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 40, 60)
    titleBar.BorderSizePixel = 0
    titleBar.Parent = self.mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleBar
    
    -- 标题文字
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "📢 重要公告"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 20
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = titleBar
    
    -- 公告内容
    local contentFrame = Instance.new("ScrollingFrame")
    contentFrame.Size = UDim2.new(1, -20, 0, 180)
    contentFrame.Position = UDim2.new(0, 10, 0, 60)
    contentFrame.BackgroundColor3 = Color3.fromRGB(30, 35, 50)
    contentFrame.BorderSizePixel = 0
    contentFrame.ScrollBarThickness = 6
    contentFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 150, 255)
    contentFrame.Parent = self.mainFrame
    
    local contentCorner = Instance.new("UICorner")
    contentCorner.CornerRadius = UDim.new(0, 8)
    contentCorner.Parent = contentFrame
    
    -- 公告内容文字
    local contentText = Instance.new("TextLabel")
    contentText.Size = UDim2.new(1, -20, 1, -20)
    contentText.Position = UDim2.new(0, 10, 0, 10)
    contentText.BackgroundTransparency = 1
    contentText.Text = [[
刘某脚本系统公告
更新了99夜杀队友汉化(手要费了)
因为我的手快要废掉了，所以你必须给我默哀10秒钟😡😡😡
一天后删除公告
]]
    contentText.TextColor3 = Color3.fromRGB(220, 220, 255)
    contentText.TextSize = 14
    contentText.TextWrapped = true
    contentText.TextXAlignment = Enum.TextXAlignment.Left
    contentText.TextYAlignment = Enum.TextYAlignment.Top
    contentText.Font = Enum.Font.Gotham
    contentText.Parent = contentFrame
    
    -- 自动调整内容高度
    contentText:GetPropertyChangedSignal("TextBounds"):Connect(function()
        contentText.Size = UDim2.new(1, -20, 0, contentText.TextBounds.Y)
        contentFrame.CanvasSize = UDim2.new(0, 0, 0, contentText.TextBounds.Y + 20)
    end)
    
    -- 倒计时显示
    self.countdownLabel = Instance.new("TextLabel")
    self.countdownLabel.Size = UDim2.new(1, -20, 0, 30)
    self.countdownLabel.Position = UDim2.new(0, 10, 0, 250)
    self.countdownLabel.BackgroundTransparency = 1
    self.countdownLabel.Text = "请仔细阅读公告 (" .. self.remainingTime .. "秒)"
    self.countdownLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
    self.countdownLabel.TextSize = 14
    self.countdownLabel.Font = Enum.Font.GothamBold
    self.countdownLabel.Parent = self.mainFrame
    
    -- 确认按钮
    self.confirmButton = Instance.new("TextButton")
    self.confirmButton.Size = UDim2.new(1, -20, 0, 40)
    self.confirmButton.Position = UDim2.new(0, 10, 1, -50)
    self.confirmButton.Text = "⏳ 等待中... (" .. self.remainingTime .. "秒)"
    self.confirmButton.TextColor3 = Color3.fromRGB(150, 150, 150)
    self.confirmButton.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
    self.confirmButton.TextSize = 16
    self.confirmButton.Font = Enum.Font.GothamBold
    self.confirmButton.Active = false
    self.confirmButton.Parent = self.mainFrame
    
    local confirmCorner = Instance.new("UICorner")
    confirmCorner.CornerRadius = UDim.new(0, 8)
    confirmCorner.Parent = self.confirmButton
    
    -- 启动倒计时
    self:startCountdown()
end

-- 启动倒计时
function AnnouncementSystem:startCountdown()
    self.timerConnection = game:GetService("RunService").Heartbeat:Connect(function(deltaTime)
        if self.remainingTime > 0 then
            self.remainingTime = self.remainingTime - deltaTime
            
            if self.remainingTime <= 0 then
                self.remainingTime = 0
                self:enableProceed()
            end
            
            -- 更新显示
            self.countdownLabel.Text = "请仔细阅读公告 (" .. math.ceil(self.remainingTime) .. "秒)"
            self.confirmButton.Text = "⏳ 等待中... (" .. math.ceil(self.remainingTime) .. "秒)"
        end
    end)
end

-- 启用继续功能
function AnnouncementSystem:enableProceed()
    if self.timerConnection then
        self.timerConnection:Disconnect()
        self.timerConnection = nil
    end
    
    self.canProceed = true
    self.countdownLabel.Text = "✅ 可以继续了！"
    self.countdownLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    
    self.confirmButton.Text = "✅ 我已阅读并同意"
    self.confirmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    self.confirmButton.BackgroundColor3 = Color3.fromRGB(0, 150, 50)
    self.confirmButton.Active = true
    
    -- 绑定确认事件
    self.confirmButton.MouseButton1Click:Connect(function()
        self:onConfirm()
    end)
end

-- 确认按钮点击
function AnnouncementSystem:onConfirm()
    if not self.canProceed then
        return
    end
    
    -- 播放确认动画
    self.confirmButton.Text = "🎉 加载中..."
    self.confirmButton.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
    self.confirmButton.Active = false
    
    -- 显示成功消息
    self.countdownLabel.Text = "✅ 正在启动脚本..."
    self.countdownLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    
    -- 1秒后执行回调
    wait(1)
    
    if self.confirmCallback then
        self.confirmCallback()
    end
    
    self:destroy()
end

-- 显示公告并等待
function AnnouncementSystem:show(callback)
    self.confirmCallback = callback
    self:createAnnouncementUI()
    
    -- 显示欢迎通知
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "📢 重要公告",
        Text = "请仔细阅读公告内容",
        Duration = 5
    })
    
    -- 等待用户确认
    while not self.canProceed do
        wait(0.1)
    end
end

-- 销毁界面
function AnnouncementSystem:destroy()
    if self.timerConnection then
        self.timerConnection:Disconnect()
        self.timerConnection = nil
    end
    
    if self.screenGui then
        self.screenGui:Destroy()
        self.screenGui = nil
    end
end

-- =============================================
-- 使用示例
-- =============================================

-- 创建公告系统
local announcement = AnnouncementSystem:new()

-- 显示公告，必须等待10秒才能继续
announcement:show(function()
    print("✅ 用户已确认公告，开始执行主脚本...")
    loadstring(game:HttpGet("https://raw.githubusercontent.com/liuliuqiang404-code/-/refs/heads/main/%E5%8D%A1%E5%AF%86%E7%B3%BB%E7%BB%9F%E8%A7%A3%E5%8D%A1"))()
    -- 这里放置您的主脚本代码
    -- 例如：
    -- loadstring(game:HttpGet("您的主脚本URL"))()
    
    -- 显示主程序启动消息
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "🚀 脚本启动",
        Text = "主程序正在运行！",
        Duration = 5
    })
end)

return AnnouncementSystem